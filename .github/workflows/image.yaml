# Copyright 2024 NVIDIA CORPORATION
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run this workflow on pull requests or merge to main/release branches
name: Image

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      build_multi_arch_images:
        required: false
        type: string
        default: true

jobs:
  build-cuda-samples:
    runs-on: linux-amd64-cpu4
    strategy:
      matrix:
        dist:
        - ubuntu22.04
        - ubi9
        sample:
        - vectorAdd
        - nbody
        - deviceQuery
        exclude:
        - dist: ubi9
          sample: deviceQuery
        - dist: ubi9
          sample: nbody
    steps:
      - uses: actions/checkout@v4
        name: Check out code

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build cuda sample image
        env:
          IMAGE_NAME: ghcr.io/nvidia/k8s-samples
          VERSION: ${{ inputs.version }}
          PUSH_ON_BUILD: true
          BUILD_MULTI_ARCH_IMAGES: ${{ inputs.build_multi_arch_images }}
        run: |
          echo "Building ${{ matrix.sample }} on ${{ matrix.dist }}"
          SAMPLE=${{ matrix.sample }} make -f deployments/container/Makefile build-${{ matrix.dist }}

  build-nvbandwidth:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build nvbandwidth image
        env:
          IMAGE_NAME: ghcr.io/nvidia/k8s-samples:nvbandwidth
          CUDA_VERSION: 12.5.0
          NVBANDWIDTH_VERSION: v0.7
          PUSH_ON_BUILD: true
          BUILD_MULTI_ARCH_IMAGES: true
        run: |
          echo "nvbandwidth ${NVBANDWIDTH_VERSION}"
          make -f multinodeNVL/nvbandwidth/Makefile build
